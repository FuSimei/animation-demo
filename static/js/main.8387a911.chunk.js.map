{"version":3,"sources":["component/Count/index.jsx","redux/reducer.js","redux/actionType.js","redux/index.js","index.js"],"names":["Counter","useEffect","console","log","type","argNames","args","action","forEach","arg","index","makeActionCreator","defaultData","count","personList","reducer","state","id","length","name","data","filter","p","store","createStore","Root","Count","ReactDOM","render","document","getElementById"],"mappings":"2NAyFeA,EA3BC,WAmBd,OANAC,qBACE,WACEC,QAAQC,IAAI,KAdhB,SAA2BC,GAAmB,IAAC,IAAD,qBAAVC,EAAU,iCAAVA,EAAU,kBAE5C,OADA,EAAAH,SAAQC,IAAR,SAAY,QAAZ,OAAuBE,IAChB,WAAkB,IAAC,IAAD,qBAANC,EAAM,yBAANA,EAAM,iBACvB,EAAAJ,SAAQC,IAAR,SAAY,OAAZ,OAAsBG,IACtB,IAAMC,EAAS,CAAEH,QAIjB,OAHAC,EAASG,SAAQ,SAACC,EAAKC,GACrBH,EAAOF,EAASK,IAAUJ,EAAKI,MAE1BH,GAMWI,CAAkB,WAAY,OAAQ,KAAtCA,CAA4C,KAAM,OAEtE,IAGA,6BACE,sCACA,kD,6BClFAC,EAAc,CAClBC,MAAO,EACPC,WAAY,IAkECC,EA/DC,WAAkC,IAAjCC,EAAgC,uDAAxBJ,EAAaL,EAAW,uCAC/C,OAAQA,EAAOH,MAEb,ICPsB,aDQpB,OAAO,2BACFY,GADL,IAEEF,WAAW,GAAD,mBACLE,EAAMF,YADD,CAER,CAAEG,GAAID,EAAMF,WAAWI,OAAQC,KAAMZ,EAAOa,UAIlD,ICfsB,aDgBpB,OAAO,2BACFJ,GADL,IAEEF,WAAYE,EAAMF,WAAWO,QAAO,SAACC,EAAGZ,GAAJ,OAAcA,IAAUH,EAAOa,UAiBvE,QACE,OAAOJ,IEnCEO,EAFDC,YAAYT,GCYpBU,G,MAAO,kBACX,kBAAC,IAAD,CAAUF,MAAOA,GACf,kBAACG,EAAD,SAIJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.8387a911.chunk.js","sourcesContent":["import React from 'react'\n// import { connect } from 'react-redux'\n// import { increment } from '../../redux/action'\nimport { useEffect } from 'react'\n\n// const Counter = (props) => {\n//   const { count, handleClickAdd } = props\n//   return (\n//     <div>\n//       <span>{count}</span>\n//       <button onClick={handleClickAdd}>add</button>\n//     </div>\n//   )\n// }\n\n// const stateToProps = (state, ownProps) => ({\n//   count: state.count\n// })\n\n// const dispatchToprops = (dispatch, ownProps) => {\n//   return {\n//     handleClickAdd: () => {\n//       dispatch(increment(3))\n//     }\n//   }\n// }\n\n// const Counter = (props) => {\n//   const { personList, handleClickAddPerson } = props\n//   return (\n//     <div>\n//       {\n//         personList.map((person) => {\n//           return (\n//             <li key={person.id}>{person.name}</li>\n//           )\n//         })\n//       }\n//       <input />\n//       <button onClick={handleClickAddPerson}>增加人数</button>\n//     </div>\n//   )\n// }\n\n// const stateToProps = (state, ownProps) => ({\n//   count: state.count,\n//   personList: state.personList,\n// })\n\n// const dispatchToprops = (dispatch, ownProps) => {\n//   return {\n//     handleClickAdd: () => {\n//       dispatch(increment(3))\n//     },\n//     handleClickAddPerson: () => {\n//       // dispatch({type: })\n//     }\n//   }\n// }\n\n// export default connect(stateToProps, dispatchToprops)(Counter)\n\nconst Counter = () => {\n  function makeActionCreator(type, ...argNames) {\n    console.log('name', ...argNames)\n    return function(...args) {\n      console.log('111', ...args)\n      const action = { type }\n      argNames.forEach((arg, index) => {\n        action[argNames[index]] = args[index]\n      })\n      return action\n    }\n  }\n\n  useEffect(\n    () => {\n      console.log('aa', makeActionCreator('ADD_TODO', 'text', 'id')('aa', 18))\n    },\n    []\n  )\n  return (\n    <div>\n      <div>count</div>\n      <button>点我</button>\n    </div>\n  )\n}\n\nexport default Counter","import { ADD_PERSON, DEL_PERSON } from './actionType'\n\nconst defaultData = {\n  count: 0,\n  personList: [],\n}\n\nconst reducer = (state = defaultData, action) => {\n  switch (action.type) {\n    // 增加\n    case ADD_PERSON:\n      return { \n        ...state, \n        personList: [\n          ...state.personList, \n          { id: state.personList.length, name: action.data }\n        ]\n       }\n    // 删除\n    case DEL_PERSON:\n      return { \n        ...state, \n        personList: state.personList.filter((p, index) => index !== action.data)\n      }\n    // 修改\n    // case EDITOR_PERSON:\n    //   return { \n    //     ...state, \n    //     personList: state.personList.map((p, i) => {\n    //       if (i !== action.data.index) {\n    //         return p\n    //       }\n    //       // 找到要修改的数据\n    //       return {\n    //         ...p,\n    //         ...action.data.person\n    //       }\n    //     })\n    //   }\n    default:\n      return state\n  }\n}\n\n// const update = (state, action) => {\n//   let person = state.personList\n//   person[0].name = 'Jack'\n//   return {\n//     ...state,\n//     personList: \n//   }\n// }\n\n// // reducer/todo，定义一个存储了数组reducer\n// export const todoReducer = (state = [], action) => state\n\n// // reducer/count，定义一个计数器reducer\n// export const countReducer = (state = 0, action) => state\n\n// // \n// // reducer/index，使用ES6的对象字面量简写方式定义对象结构\n// export const reducer = combineReducers({\n//   todoReducer,\n//   countReducer\n// })\n\n// // 使用\n// console.log(store.getState())\n// // {todoReducer : [], countReducer: 0}\n\nexport default reducer","export const INCREMENT = 'INCREMENT'\nexport const DECREMENT = 'DECREMENT'\n\nexport const ADD_PERSON = 'ADD_PERSON'\nexport const DEL_PERSON = 'DEL_PERSON'\nexport const EDITOR_PERSON = 'EDITOR_PERSON'","import { createStore } from 'redux'\nimport reducer from './reducer'\n\nconst store = createStore(reducer)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './component/App'\nimport Count from './component/Count'\n// import { GlobalProvider } from './context'\nimport { Provider } from 'react-redux'\nimport store from './redux'\nimport './index.scss'\n\n// const Root = () => (\n//   <GlobalProvider>\n//     <App />\n//   </GlobalProvider>\n// )\n\nconst Root = () => (\n  <Provider store={store}>\n    <Count />\n  </Provider>\n)\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root')\n)"],"sourceRoot":""}